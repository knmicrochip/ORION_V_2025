services:
  # mqtt5 nanomq
  mqtt5:
    image: emqx/nanomq:0.23
    container_name: mqtt5
    mem_limit: 512m
    mem_reservation: 512m
    ports:
      - "1883:1883" #default mqtt port
      - "9001:9001" #default mqtt port for websockets
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - ./mqtt-server/nanomq/nanomq.conf:/etc/nanomq.conf
      - ./mqtt-server/nanomq/nanomq_pwd.conf:/etc/nanomq_pwd.conf
      - ./mqtt-server/nanomq/nanomq_acl.conf:/etc/nanomq_acl.conf
    networks:
      - orion-network

  # uart-mqtt-gateway service
  uart-mqtt-gateway:
    build: ./uart-mqtt-gateway
    container_name: uart-mqtt-gateway
    mem_limit: 256m
    mem_reservation: 256m
    user: "root:root"   # A bit dangerous, but needed for serial port access for now
    privileged: true
    restart: unless-stopped
    volumes:
      - /dev:/dev
    environment:
      - MQTT_USERNAME=${MQTT_USERNAME:-user}
      - MQTT_PASSWORD=${MQTT_PASSWORD:-user}
      - UART_MQTT_GATEWAY_MQTT_BROKER_URL=mqtt5
    depends_on:
      - mqtt5
    ports:
      - "8088:8088"
    networks:
      - orion-network

  # rover-controller-service service
  rover-controller-service:
    build: ./rover-controller-service
    container_name: rover-controller-service
    mem_limit: 256m
    mem_reservation: 256m
    restart: unless-stopped
    volumes:
      - /dev:/dev
    environment:
      - MQTT_USERNAME=${MQTT_USERNAME:-user}
      - MQTT_PASSWORD=${MQTT_PASSWORD:-user}
      - MQTT_BROKER_URL=mqtt5
    depends_on:
      - mqtt5
    ports:
      - "8880:8880"
    networks:
      - orion-network

  ground-control-web-app:
    build: ./ground-control-web-app
    container_name: ground-control-web-app
    environment:
      - MQTT_USERNAME=${MQTT_USERNAME:-user}
      - MQTT_PASSWORD=${MQTT_PASSWORD:-user}
      - MQTT_BROKER_URL=${IP_ADDRESS_OF_HOST_PC_IN_LOCAL_NETWORK:-mqtt5}
      - MQTT_BROKER_PORT=9001
    user: "${UID:-1000}:${GID:-1000}"
    restart: unless-stopped
    depends_on:
      - mqtt5
    ports:
      - "80:8080"
    networks:
      - orion-network

networks:
  orion-network:
    driver: bridge